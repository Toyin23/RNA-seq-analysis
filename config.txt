######################################################################################
#Defining the location of the pipeline and some related scripts

#the 'home' directory for the RNA-seq pipeline:
PIPELINE_HOME="/cccbstore-rc/projects/cccb/pipelines/RNA_Seq_pipeline"

#a directory containing the template files+libraries for creating the output report. will be filled-in by scripts at end of pipeline
REPORT_TEMPLATE_DIR=$PIPELINE_HOME"/report_generator" #somewhere centrally located (do not change)
REPORT_TEMPLATE_LIBRARIES=$REPORT_TEMPLATE_DIR'/lib/'
REPORT_TEMPLATE_HTML=$REPORT_TEMPLATE_DIR'/rnaseq_template.html'
ERROR_PAGE=$REPORT_TEMPLATE_DIR'/error.html'
HELP_PAGE_CONTENT=$REPORT_TEMPLATE_DIR'/explanations.html'

# the location of the template alignment scripts:
SNAPR_ALIGN_SCRIPT=$PIPELINE_HOME"/snapr_align_template.sh"
STAR_ALIGN_SCRIPT=$PIPELINE_HOME"/star_align_template.sh"

#some helper scripts:
PREPARE_ALIGN_SCRIPT=$PIPELINE_HOME'/prepare_align_script.py'
CHECK_BAM_SCRIPT=$PIPELINE_HOME'/check_for_bam.py'
CREATE_DESIGN_MATRIX_SCRIPT=$PIPELINE_HOME'/create_design_matrix.py'
CREATE_REPORT_SCRIPT=$REPORT_TEMPLATE_DIR'/create_report.py'
PROCESS_COUNT_FILE_SCRIPT=$PIPELINE_HOME'/process_count_files.R'

# R script for calling DESeq and performing the differential expression analysis:
DESEQ_SCRIPT=$PIPELINE_HOME"/deseq_original.R"

#the R script for calling DESeq to get the normalized counts (and also produce a heatmap):
NORMALIZED_COUNTS_SCRIPT=$PIPELINE_HOME"/normalized_counts_and_heatmap.R"

#the R scripts for preparing files for GSEA:
CREATE_GSEA_CLS_SCRIPT=$PIPELINE_HOME'/create_cls.R'
CREATE_GSEA_GCT_SCRIPT=$PIPELINE_HOME'/convert_to_gct.R'

#the script for running the GSEA analysis:
RUN_GSEA_SCRIPT=$PIPELINE_HOME'/run_gsea.sh'

# add samtools to PATH
export PATH=/cccbstore-rc/projects/cccb/apps/samtools-0.1.19/:$PATH
if ! which samtools ; then
	echo "Could not locate samtools in current directory or PATH: "$PATH 
	exit 1
fi


# add subread to PATH
export PATH=/cccbstore-rc/projects/cccb/apps/subread-1.4.4-Linux-x86_64/bin/:$PATH
if ! which featureCounts ; then
	echo "Could not locate Subreads's featureCounts utility in current directory or PATH: "$PATH 
	exit 1
fi

#####################################################################################

#####################################################################################
# definitions related to the STAR aligner:

#a string for the star aligner-- for consistent referral
STAR="STAR"

STAR_LOCATION=/cccbstore-rc/projects/cccb/apps/STAR_2.3.1z4/
export PATH=$STAR_LOCATION:$PATH

# a name for the directory where the alignments will be processed/stored
STAR_ALIGN_DIR=star_aln
#####################################################################################


#####################################################################################
# definitions related to the SNAPR aligner:

#add snapR to the PATH:
SNAPR_LOCATION=/cccbstore-rc/projects/cccb/apps/snapr-master/
export PATH=$SNAPR_LOCATION:$PATH

#a string for the snapr aligner-- for consistent referral
SNAPR="SNAPR"

#how long to sleep (in seconds) in between attempts to run snapr (in the case that another snapr process is already running we do NOT want to start another!)
SLEEP_TIME=300

#the maximum times to try and run snapr (in case of another snapr process running, we sleep and wait this many times)
MAX_ALIGN_ATTEMPTS=20

#used for identifying if there are other snapr processes currently running.  When pgrep is run, searching for "snapr" will flag them
#thus, this should be what shows up if you run 'top'
SNAPR_PROCESS="snapr"

# a file extension for the count files.  
# for example, sample SH10_XXX would have count file SH10_XXX.counts if this variable is '.counts'
COUNTFILE_SUFFIX=".gene_name.counts.txt"

# a name for the directory where the alignments will be processed/stored
SNAPR_ALIGN_DIR=snapr_aln
#####################################################################################################


#####################################################################################################
#Definitions related to the RNA-SeQC process:

#location of RNA_seQC jar:
RNA_SEQC_JAR=$PIPELINE_HOME"/RNA-SeQC_v1.1.7.jar"

#name of the default html report generated by RNA-seQC-- this will be nested in our output html report
DEFAULT_RNA_SEQC_REPORT='report.html'
#####################################################################################################

#####################################################################################################
# definitions, etc. related to GSEA process:

GSEA_JAR=/cccbstore-rc/projects/cccb/apps/gsea_2.2/gsea2-2.0.14.jar

GSEA_ANALYSIS=xtools.gsea.Gsea

DEFAULT_GMX_FILE=gseaftp.broadinstitute.org://pub/gsea/gene_sets/c2.all.v4.0.symbols.gmt
DEFAULT_CHIP_FILE=gseaftp.broadinstitute.org://pub/gsea/annotations/GENE_SYMBOL.chip
NUM_GSEA_PERMUTATIONS=1000

#the name of the directory.  To be placed in the report directory
GSEA_OUTPUT_DIR=gsea
GSEA_CLS_FILE=classes.cls
GSEA_GCT_FILE=expressions.gct

# the name of the default report that gsea creates
GSEA_DEFAULT_HTML=index.html
#####################################################################################################



#####################################################################################################
#some other configuration parameters-- most are "arbitrary" and can be left as-is.

#the name (not path) of	the sample sheet (containing sequencing	metadata) located in the sample-specific directories:
SAMPLE_SHEET_NAME='SampleSheet.csv'

# the prefix for the sample-specific directories (often 'Sample_').
# Depending on the process producing the project directories + FASTQ files, this could change.
SAMPLE_DIR_PREFIX="Sample_"

# a file suffix/extension for identifying the alignment scripts that are generated on-the-fly by a python script
FORMATTED_ALIGN_SCRIPT_NAMETAG="_aln.sh"

# the desired output extension for the sorted bam files
SORTED_TAG=".sorted"
BAM_EXTENSION=".bam"

#DESeq output directory- to be placed in PROJECT_DIR
DESEQ_RESULT_DIR="deseq_results"

#a string that will make identification of DESeq output easier:
DESEQ_OUTFILE_TAG=".deseq"

#a normalized counts file for all the samples, produced by DESEQ:
NORMALIZED_COUNTS_FILE="normalized_counts.csv"

# the heatmap filename
HEATMAP_FILE="heatmap.png"

# the number of genes to include in the heatmap
# (the top X number of genes ranked by average counts across all samples)
HEATMAP_GENE_COUNT=30

# a directory (to be placed in $PROJECT_DIR) where the count files will be located
COUNTS_DIR="count_files"

#a directory for the overall report html and and associated files- located in the project directory
REPORT_DIR="output_report"

#the name of the final html report produced by the pipeline.  To be placed in the REPORT_DIR
FINAL_RESULTS_REPORT='results_report.html'

#a directory where the RNA-seQC will write-- located in the REPORT_DIR directory
RNA_SEQC_DIR="rna_seQC_reports"

#  the name of a temporary file which will keep track of all valid samples (based on the presence of data, etc)
VALID_SAMPLE_FILE="valid_samples.txt"

# The name for the design matrix file that will be given to DESeq.  Placed in $PROJECT_DIR
DESIGN_MTX_FILE="design_mtx.txt"

############################################################################################################

# some convenience variables
NUM1=1
NUM0=0
############################################################################################################
